spring.application.name=aiart
# for banner
spring.ai.version=@spring-ai.version@
app.name=@project.name@
app.version=@project.version@

# docker
spring.docker.compose.lifecycle-management=start_only

# performance
spring.threads.virtual.enabled=true

# db
spring.datasource.username=aiart
spring.datasource.password=secret
spring.datasource.url=jdbc:postgresql://localhost:5432/aiart
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# db - seed data
spring.sql.init.mode=always

# ollama
spring.ai.ollama.init.pull-model-strategy=always
spring.ai.ollama.init.timeout=60s
spring.ai.ollama.init.max-retries=1
# default: mistral
#spring.ai.ollama.chat.options.model=mistral
#spring.ai.ollama.chat.options.model=deepseek-r1:latest

# 5 min, default timeout for chat requests is 30 sec
spring.mvc.async.request-timeout=300000

# actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
# default: 0.1 (10%) not all requests are traced
management.tracing.sampling.probability=1.0
#default
#management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
  #spring.ai.chat.client.observations.log-prompt=true
#spring.ai.chat.observations.log-prompt=true
#spring.ai.chat.client.enabled=true

# shutdown
#server.shutdown=graceful
server.shutdown=immediate

#logging
#logging.level.org.springframework=DEBUG
logging.level.org.springframework.boot.docker.compose=DEBUG
logging.level.org.springframework.modulith=DEBUG
#logging.level.org.springframework.ai.chat.client.advisor.SimpleLoggerAdvisor=DEBUG
logging.level.org.springframework.ai.chat.client.advisor=DEBUG

